name: Build wiringX

on: 
  push:

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64

    - name: Installation depends
      run: |
        echo "============== to prepare the env ============== "
        sudo apt-get update -y
        sudo apt-get install -y python2-dev python2.7 python-dev-is-python3 python3 python3.9
        sudo apt-get install -y git build-essential swig  libnode-dev  cmake libjson-c-dev libc6 libgcc1 libstdc++6   libgtest-dev pkg-config cmake-data

    - name: Clone source code
      run: |
        echo "============== to get the source code ! =============="
        git clone https://github.com/nascs/wiringX.git

    - name: Set up build env
      run: |
        export CC=/usr/bin/gcc
        cd ${{ github.workspace }}/wiringX
        echo ${{ github.workspace }}/wiringX
        mkdir build
        cd build
        cmake ..

    - name: Build Project
      run: |
        cd ${{ github.workspace }}/wiringX/build
        export CC=/usr/bin/gcc
        make -j8
        cpack -G DEB
        cp ${{ github.workspace }}/wiringX/build/libwiringx*.deb $GITHUB_WORKSPACE/libwiringX.deb
        echo "============== Build complete =============="

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: wiringx-deb
        path: $GITHUB_WORKSPACE/libwiringX.deb
        if-no-files-found: error


  Release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: Build

    steps:
      - name: Checkout package
        uses: actions/download-artifact@v3
      
      - name: Create release
        uses: actions/create-release@v1
        with:
          tag_name: tag_v1
          name: Release_V1
          body: TODO New Release.
          release_name: libwiringX_v1
          draft: false
          prerelease: false
          files: |
            $GITHUB_WORKSPACE/libwiringX.deb
            LICENSE
